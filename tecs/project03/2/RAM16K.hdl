// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM16K.hdl

/**
 * Memory of 16K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM16K[address(t)](t)
 *     Write: If load(t-1) then RAM16K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */


CHIP RAM16K {

    IN  in[16], load, address[14];
    OUT out[16];

    PARTS:
    Not(in=address[12], out=nmsb0);
    Not(in=address[13], out=nmsb1);

    And(a=nmsb0, b=nmsb1, out=sb00);
    And(a=address[12], b=nmsb1, out=sb01);
    And(a=nmsb0, b=address[13], out=sb10);
    And(a=address[12], b=address[13], out=sb11);

    And(a=load, b=sb00, out=lb00);
    And(a=load, b=sb01, out=lb01);
    And(a=load, b=sb10, out=lb10);
    And(a=load, b=sb11, out=lb11);

    RAM4K(in=in, address=address[0..11], load=lb00, out=b00);
    RAM4K(in=in, address=address[0..11], load=lb01, out=b01);
    RAM4K(in=in, address=address[0..11], load=lb10, out=b10);
    RAM4K(in=in, address=address[0..11], load=lb11, out=b11);

    Mux4Way16(
      a=b00,
      b=b01,
      c=b10,
      d=b11,
      sel=address[12..13],
      out=out);
}
